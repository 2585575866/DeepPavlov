{
  "dataset_reader": {
    "class_name": "basic_dataset_reader",
    "data_path": "{DOWNLOADS_PATH}/rus-eng",
    "train": "rus_short.txt",
    "sep": "\t",
    "header": null,
    "names": [
      "eng",
      "rus"
    ],
    "x": "eng",
    "y": "rus"
  },
  "dataset_iterator": {
    "class_name": "basic_classification_iterator",
    "seed": 42,
    "split_seed": 23,
    "field_to_split": "train",
    "split_fields": [
      "train",
      "valid",
      "test"
    ],
    "split_proportions": [
      0.8,
      0.1,
      0.1
    ]
  },
  "chainer": {
    "in": [
      "x"
    ],
    "in_y": [
      "y"
    ],
    "pipe": [
      {
        "in": "x",
        "out": "x_prep",
        "id": "my_preprocessor",
        "class_name": "str_lower"
      },
      {
        "in": "x_prep",
        "out": "x_char",
        "class_name": "char_splitter",
        "id": "my_splitter"
      },
      {
        "in": "y",
        "out": "y_prep",
        "ref": "my_preprocessor"
      },
      {
        "in": "y_prep",
        "out": "y_char",
        "ref": "my_splitter"
      },
      {
        "in": "x_char",
        "id": "x_chars_vocab",
        "class_name": "simple_vocab",
        "pad_with_zeros": false,
        "fit_on": [
          "x_char"
        ],
        "save_path": "{MODELS_PATH}/x_chars.dict",
        "load_path": "{MODELS_PATH}/x_chars.dict",
        "special_tokens": [
          "<PAD>",
          "<UNK>"
        ],
        "unk_token": "<UNK>",
        "min_freq": 5,
        "out": "x_chars_ind"
      },
      {
        "in": "y_char",
        "id": "y_chars_vocab",
        "class_name": "simple_vocab",
        "pad_with_zeros": false,
        "special_tokens": [
          "<PAD>",
          "<UNK>",
          "<BOS>",
          "<EOS>"
        ],
        "unk_token": "<UNK>",
        "fit_on": [
          "y_char"
        ],
        "save_path": "{MODELS_PATH}/y_chars.dict",
        "load_path": "{MODELS_PATH}/y_chars.dict",
        "min_freq": 5,
        "out": "y_chars_ind"
      },
      {
        "in": "x_chars_ind",
        "in_y": "y_chars_ind",
        "out": "y_chars_ind_pred",
        "main": true,
        "class_name": "keras_seq2seq_char_model",
        "save_path": "{MODELS_PATH}/model",
        "load_path": "{MODELS_PATH}/model",
        "encoder_embedding_size": 50,
        "decoder_embedding_size": 50,
        "src_vocab_size": "#x_chars_vocab.__len__()",
        "tgt_vocab_size": "#y_chars_vocab.__len__()",
        "src_pad_id": "#x_chars_vocab.__getitem__('<PAD>')",
        "tgt_pad_id": "#y_chars_vocab.__getitem__('<PAD>')",
        "tgt_bos_id": "#y_chars_vocab.__getitem__('<BOS>')",
        "tgt_eos_id": "#y_chars_vocab.__getitem__('<EOS>')",
        "src_max_length": 50,
        "tgt_max_length": 50,
        "decoder_vocab": "#y_chars_vocab",
        "optimizer": "Adam",
        "learning_rate": 0.01,
        "learning_rate_decay": 0.001,
        "loss": "categorical_crossentropy",
        "hidden_size": 256,
        "model_name": "encoder_decoder_model",
        "encoder_name": "gru_encoder_model",
        "decoder_name": "gru_decoder_model"
      },
      {
        "ref": "y_chars_vocab",
        "in": "y_chars_ind_pred",
        "out": "y_pred_chars"
      },
      {
        "class_name": "char_connector",
        "in": "y_pred_chars",
        "out": "y_text"
      },
      {
        "in": "y_prep",
        "out": "y_tok",
        "id": "my_tokenizer",
        "class_name": "nltk_moses_tokenizer"
      },
      {
        "ref": "my_tokenizer",
        "in": "y_text",
        "out": "y_tok_text"
      }
    ],
    "out": "y_text"
  },
  "train": {
    "epochs": 100,
    "batch_size": 64,
    "metrics": [
      {
        "name": "per_token_accuracy",
        "inputs": ["y_tok", "y_tok_text"]
      },
      "bleu"
    ],
    "validation_patience": 5,
    "val_every_n_epochs": 5,
    "log_every_n_epochs": 1,
    "show_examples": true,
    "validate_best": false,
    "test_best": false,
    "tensorboard_log_dir": "{MODELS_PATH}/"
  },
  "metadata": {
    "variables": {
      "ROOT_PATH": "~/.deeppavlov",
      "DOWNLOADS_PATH": "{ROOT_PATH}/downloads",
      "MODELS_PATH": "{ROOT_PATH}/models/seq2seq/rus-eng/char_level/model_v0"
    },
    "requirements": [
      "{DEEPPAVLOV_PATH}/requirements/tf.txt"
    ],
    "download": [
      {
        "url": "http://files.deeppavlov.ai/datasets/rus-eng.tar.gz",
        "subdir": "{DOWNLOADS_PATH}/"
      }
    ]
  }
}
